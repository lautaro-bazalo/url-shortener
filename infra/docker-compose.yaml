version: "3.8"
services:
  api1:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=secret
      - DB_NAME=url_shortener
      - REDIS_HOST=cache
      - REDIS_PORT=6379
    depends_on:
      - db
      - cache
    volume:
      - ./app-data/:/app/data
  api2:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=secret
      - DB_NAME=url_shortener
      - REDIS_HOST=cache
      - REDIS_PORT=6379
    depends_on:
      - db
      - cache
    volume:
      - ./app-data/:/app/data

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: url_shortener
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql

  cache:
    image: redis:alpine
    container_name: redis_cache
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  nginx:
    image: nginx:latest
    container_name: nginx_loadbalancer
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2

volumes:
  db_data:

